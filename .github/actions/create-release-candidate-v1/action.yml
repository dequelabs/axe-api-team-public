name: create-release-candidate
description: 'A GitHub Action to create a release candidate'

inputs:
  token:
    description: 'A GitHub token used for octokit and GH CLI with the required permissions'
    required: true
  base:
    description: 'The branch the pull request will be merged into'
    required: true
  head:
    description: 'The branch that contains the changes the pull request is trying to merge'
    required: true
  release-script-path:
    description: 'The path to the script that creates the changelogs and bumps the version of the package(s)'
    required: true
  slack-webhook:
    description: 'The Slack webhook to send the release candidate notification to'
    required: true
  version-locked:
    description: 'Whether or not the version should be locked to axe-core'
    default: 'false'
    required: false
  docs-repo:
    description: 'The name of the repo where the release notes live'
    default: 'null'
    required: false

runs:
  using: 'composite'
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        # Fetch all history
        fetch-depth: 0

    - name: Is release in progress
      uses: dequelabs/axe-api-team-public/.github/actions/is-release-in-progress-v1@main
      id: is_release_in_progress
      with:
        github-token: ${{ inputs.token }}

    - name: Generate commit list
      if: ${{ !steps.is_release_in_progress.outputs.in_progress }}
      uses: dequelabs/axe-api-team-public/.github/actions/generate-commit-list-v1@main
      id: generate_commit_list
      with:
        base: ${{ inputs.base }}
        head: ${{ inputs.head }}

    - name: Has releasable commits
      if: ${{ !steps.is_release_in_progress.outputs.in_progress }}
      uses: dequelabs/axe-api-team-public/.github/actions/has-auto-releasable-commits-v1@main
      id: has_releasable_commits
      with:
        commits: '${{ steps.generate_commit_list.outputs.commit-list }}'
        version-locked: ${{ inputs.version-locked }}

    - name: Cancel release if a release is already in progress or there are no releasable commits
      shell: bash
      if: ${{ steps.is_release_in_progress.outputs.in_progress == 'true' || steps.has_releasable_commits.outputs.should_release == 'false' }}
      run: |
        echo "Release is in progress: ${{ steps.is_release_in_progress.outputs.in_progress }}"
        echo "Should release: ${{ steps.has_releasable_commits.outputs.should_release }}"
        gh run cancel ${{ github.run_id }}
        gh run watch ${{ github.run_id }}

    - name: Run prepare_release shell script
      shell: bash
      id: prepare_release
      run: |
        if [ "${{ inputs.version-locked }}" = "true" ]
        then
          # We will always release as patch if the version is locked to axe-core
          bash ${{ inputs.release-script-path }} patch
        else 
          bash ${{ inputs.release-script-path }}
        fi

    - name: Get bumped version number
      shell: bash
      id: get_bumped_version_number
      run: |
        # Get the version number from the prepare_release shell script and set it as an output
        # Monorepos have a lerna.json file that contains the updated version number
        # Non-monorepos, or non-npm repos, have a package.json file that contains the updated version number
        if [ -f "lerna.json" ]; then
          echo "version=$(cat lerna.json | jq -r '.version')" >> $GITHUB_OUTPUT
        else
          echo "version=$(cat package.json | jq -r '.version')" >> $GITHUB_OUTPUT
        fi

    # https://github.com/dequelabs/axe-core-npm/blob/62fd241fb3748ca8ce4adb30d7976947ccaa18ee/.github/workflows/create-release.yml#L32-L57
    - name: Create release commit
      shell: bash
      run: |
        git config user.name "API Team CI User"
        git config user.email "aciattestteamci@deque.com"
        git commit -am "chore: release v${{ steps.get_bumped_version_number.outputs.version }}"

    # https://github.com/dequelabs/axe-core-npm/blob/62fd241fb3748ca8ce4adb30d7976947ccaa18ee/.github/workflows/create-release.yml#L32-L57
    # create-pull-request has no way of setting the target branch that won't also
    # get rid of all commits (aside from the release commit).
    # So, we have to be on master and manually grab all the changes.
    # We do that by just telling git "master is now develop (+ the release commit)".
    - name: Update local master from develop
      shell: bash
      run: |
        commitHash="$(git log -1 --format='%H')"
        git checkout release
        git reset --hard "$commitHash"

    - name: Get release date
      shell: bash
      id: get_release_date
      run: |
        echo "release-date=$(date +%Y-%m-%d)" >> $GITHUB_OUTPUT

    - name: Get release notes
      shell: bash
      run: |
        # https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#example-of-a-multiline-string
        {
          echo 'RELEASE_NOTES<<EOF'
          git show \
            --no-color \
            --no-prefix \
            --output-indicator-new=! CHANGELOG.md | egrep '^!' | awk -F'^[!]' '{print $2}' | sed -e 's/\n/$0A/g'
          echo EOF
        } >> $GITHUB_ENV

    # https://github.com/dequelabs/axe-core-npm/blob/62fd241fb3748ca8ce4adb30d7976947ccaa18ee/.github/workflows/create-release.yml#L32-L57
    - name: Create pull request
      # Last commit on v5 tag: https://github.com/peter-evans/create-pull-request/commit/153407881ec5c347639a548ade7d8ad1d6740e38
      uses: peter-evans/create-pull-request@153407881ec5c347639a548ade7d8ad1d6740e38
      id: create_pull_request
      with:
        token: ${{ inputs.token }}
        branch: release-${{ steps.get_release_date.outputs.release-date }}
        base: release
        title: 'chore: release v${{ steps.get_bumped_version_number.outputs.version }}'
        body: ${{ env.RELEASE_NOTES }}
        # If there are any changes not already committed, they will be added to
        # a commit with this as the message.
        # If there are no changes no commit will be created.
        commit-message: 'chore: applying release changes'
        labels: 'release'

    - name: Create release notes issue
      if: ${{ inputs.docs-repo != 'null' }}
      uses: dequelabs/axe-api-team-public/.github/actions/create-project-issue-v1@main
      id: create_release_notes_issue
      with:
        token: ${{ inputs.token }}
        repo: ${{ inputs.docs-repo }}
        labels: 'PRIORITY: high,release'
        assignees: 'enlarsen'
        column_name: 'To Do'
        title: '${{ github.repository }} v${{ steps.get_bumped_version_number.outputs.version }} - Release Notes Needed'
        body: |
          PR: ${{ steps.create_pull_request.outputs.pull-request-url }}

          Release Notes are needed for ${{ github.repository }} v${{ steps.get_bumped_version_number.outputs.version }}. Please make sure this issue is closed when the PR is merged.

    - name: Create release issue
      uses: dequelabs/axe-api-team-public/.github/actions/create-project-issue-v1@main
      id: create_release_issue
      with:
        token: ${{ inputs.token }}
        labels: 'PRIORITY: high,release'
        column_name: 'Ready for QA'
        title: '${{ github.repository }} v${{ steps.get_bumped_version_number.outputs.version }}'
        body: |
          # Below is everything related to this release 

          ## !!!!!!!!!! DEPENDENCIES / BLOCKERS !!!!!!!!!!
          (List anything blocking this RC from continuing here)

          ```[tasklist]
          ### Links
          - [X] Release candidate PR: ${{ steps.create_pull_request.outputs.pull-request-url }}
          - [ ] Release PR:
          - [ ] Release audit:
          ``` 
          ## Release Steps
          - [ ] Requested QA
          - [ ] QA signoff on RC
          - [ ] Release created
          - [ ] Release audit done
          - [ ] Release audit posted
          - [ ] Release merged
          - [ ] Deployed
          - [ ] Posted in product-channel

          ## Additional Steps For AWS Deploys
          - [ ] AWS NOT NEEDED
          - [ ] Emailed IHD
          - [ ] Set up meeting for deployment
          - [ ] Data migrations:
          - [ ] Environment variables:
          - [ ] Docker image:
          - [ ] Smoke test passed

          ## Additional Steps Release Notes
          - [ ] RELEASE NOTES NOT NEEDED
          - [ ] Ticket created for release notes: ${{ steps.create_release_notes_issue.outputs.issue_url }}
          - [ ] Release notes reviewed
          - [ ] Release notes published 
          - [ ] Release notes: (public URL)

    - name: Add release issue to release project board
      uses: dequelabs/axe-api-team-public/.github/actions/add-to-board-v1@main
      with:
        issue-urls: ${{ steps.create_release_issue.outputs.issue_url }}
        project-number: '103'
        column-name: 'RC Created'

    - name: Slack Notification
      # https://github.com/rtCamp/action-slack-notify/commit/b24d75fe0e728a4bf9fc42ee217caa686d141ee8
      uses: rtCamp/action-slack-notify@12e36fc18b0689399306c2e0b3e0f2978b7f1ee7
      env:
        SLACK_CHANNEL: api-team-releases
        SLACK_COLOR: ${{ job.status }}
        SLACK_TITLE: '${{ github.event.repository.name }} v${{ steps.get_bumped_version_number.outputs.version }} QA NEEDED'
        SLACK_MESSAGE: ${{ steps.create_release_issue.outputs.issue_url }}
        SLACK_WEBHOOK: ${{ inputs.slack-webhook }}
        MSG_MINIMAL: 'true'
