name: abort-release-candidate
description: 'A GitHub Action to abort a release candidate'

inputs:
  token:
    description: 'Token used for the GH CLI to close and move issue(s) to the correct column. See README for required permissions'
    required: true
  base:
    description: 'The branch the release candidate will be merged into'
    required: true
  docs-repo:
    description: 'The docs repository where the issue for the release candidate is located'
    default: 'null'
    required: false

runs:
  using: 'composite'
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        # Checkout the release branch so we can get the release candidate version and reset it to the base branch later
        ref: 'release'

    - name: Get release candidate version
      shell: bash
      id: get-release-candidate-version
      run: |
        # Get the version number from the prepare_release shell script and set it as an output
        # Monorepos have a lerna.json file that contains the updated version number
        # Non-monorepos, or non-npm repos, have a package.json file that contains the updated version number
        if [ -f "lerna.json" ]; then
          echo "release_candidate_version=$(cat lerna.json | jq -r '.version')" >> $GITHUB_OUTPUT
        else
          echo "release_candidate_version=$(cat package.json | jq -r '.version')" >> $GITHUB_OUTPUT
        fi

    - name: Get release candidate issue url
      uses: dequelabs/axe-api-team-public/.github/actions/get-release-issue-v1@main
      id: get-release-issue
      with:
        version: ${{ steps.get-release-candidate-version.outputs.release_candidate_version }}
      env:
        GH_TOKEN: ${{ inputs.token }}

    - name: debug
      shell: bash
      run: |
        echo "release_candidate_version=${{ steps.get-release-candidate-version.outputs.release_candidate_version }}"
        echo "release_issue_url=${{ steps.get-release-issue.outputs.issue-url }}"
        echo "doesExist=${{ steps.get-release-issue.outputs.issue-url != '' }}"

    - name: Close release candidate issue as `Not Planned`
      # Guard against empty issue url if the issue was not found in the previous step
      if: ${{ steps.get-release-issue.outputs.issue-url != '' }}
      shell: bash
      run: |
        gh issue close ${{ steps.get-release-issue.outputs.issue-url }} -r "not planned"
      env:
        GH_TOKEN: ${{ inputs.token }}

    - name: Move release candidate issue to `Not Planned` column (Board 66)
      if: ${{ steps.get-release-issue.outputs.issue-url != '' }}
      uses: dequelabs/axe-api-team-public/.github/actions/add-to-board-v1@main
      with:
        issue-urls: ${{ steps.get-release-issue.outputs.issue-url }}
        column-name: 'Not Doing'
        project-number: '66'
      env:
        GH_TOKEN: ${{ inputs.token }}

    - name: Move release candidate issue to `Release Cancelled` column (Board 103)
      if: ${{ steps.get-release-issue.outputs.issue-url != ''}}
      uses: dequelabs/axe-api-team-public/.github/actions/add-to-board-v1@main
      with:
        issue-urls: ${{ steps.get-release-issue.outputs.issue-url }}
        column-name: 'Release Cancelled'
        project-number: '103'
      env:
        GH_TOKEN: ${{ inputs.token }}

    - name: Get release candidate issue url from docs-repo
      if: ${{ inputs.docs-repo != 'null' }}
      uses: dequelabs/axe-api-team-public/.github/actions/get-release-issue-v1@main
      id: get-release-issue-from-docs-repo
      with:
        version: ${{ steps.get-release-candidate-version.outputs.release_candidate_version }}
        repo: ${{ inputs.docs-repo }}
      env:
        GH_TOKEN: ${{ inputs.token }}

    - name: Close release candidate issue as `Not Planned` in docs-repo
      # Guard against empty issue url if the issue was not found in the previous step
      if: ${{ inputs.docs-repo != 'null' }} && ${{ steps.get-release-issue-from-docs-repo.outputs.issue-url != '' }}
      shell: bash
      run: |
        gh issue close ${{ steps.get-release-issue-from-docs-repo.outputs.issue-url }} -r "not planned"
      env:
        GH_TOKEN: ${{ inputs.token }}

    - name: Move release candidate doc issue to `Not Planned` column (Board 66)
      if: ${{ inputs.docs-repo != 'null' }} && ${{ steps.get-release-issue-from-docs-repo.outputs.issue-url != '' }}
      uses: dequelabs/axe-api-team-public/.github/actions/add-to-board-v1@main
      with:
        issue-urls: ${{ steps.get-release-issue-from-docs-repo.outputs.issue-url }}
        column-name: 'Not Doing'
        project-number: '66'
      env:
        GH_TOKEN: ${{ inputs.token }}

    - name: Reset release branch to ${{ inputs.base }}
      shell: bash
      run: |
        git reset --hard "origin/${{ inputs.base }}"
        git push --force origin release
